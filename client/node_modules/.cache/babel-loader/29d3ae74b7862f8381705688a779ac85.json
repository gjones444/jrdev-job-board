{"ast":null,"code":"var _jsxFileName = \"/Users/G.Funk/Documents/Developer Folder/Personal Projects/Projects/100m-startup-starter/client/src/JobModal.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Chip from '@material-ui/core/Chip';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n});\nexport default function JobModal({\n  job,\n  open,\n  handleClose\n}) {\n  if (!job.title) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, job.title, \" -\", job.company, React.createElement(\"img\", {\n    alt: \"company-logo\",\n    className: 'detail-logo',\n    src: job.company_logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    size: \"small\",\n    label: \"from \".concat(job.source),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\",\n    dangerouslySetInnerHTML: {\n      __html: job.description\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"a\", {\n    href: job.url,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Apply\")))));\n}","map":{"version":3,"sources":["/Users/G.Funk/Documents/Developer Folder/Personal Projects/Projects/100m-startup-starter/client/src/JobModal.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Chip","Transition","forwardRef","props","ref","JobModal","job","open","handleClose","title","company","company_logo","source","__html","description","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,UAAU,GAAGT,KAAK,CAACU,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAChE,SAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KAAoCD,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFgB,CAAnB;AAIE,eAAe,SAASE,QAAT,CAAkB;AAACC,EAAAA,GAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAlB,EAA6C;AAE1D,MAAI,CAACF,GAAG,CAACG,KAAT,EAAgB;AACZ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,mBAAmB,EAAEN,UAFvB;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,OAAO,EAAEO,WAJX;AAKE,uBAAgB,0BALlB;AAME,wBAAiB,gCANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,GAAG,CAACG,KADP,QAEGH,GAAG,CAACI,OAFP,EAGE;AAAK,IAAA,GAAG,EAAC,cAAT;AAAwB,IAAA,SAAS,EAAE,aAAnC;AAAkD,IAAA,GAAG,EAAEJ,GAAG,CAACK,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CARF,EAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AACI,IAAA,EAAE,EAAC,gCADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,KAAK,iBAAUL,GAAG,CAACM,MAAd,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME,oBAAC,iBAAD;AACI,IAAA,EAAE,EAAC,gCADP;AAEI,IAAA,uBAAuB,EAAE;AAACC,MAAAA,MAAM,EAAEP,GAAG,CAACQ;AAAb,KAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAbF,EAwBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE;AAAG,IAAA,IAAI,EAAEF,GAAG,CAACS,GAAb;AAAkB,IAAA,MAAM,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAJF,CAxBF,CADF,CADF;AAuCD","sourcesContent":["import React from 'react'\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Chip from '@material-ui/core/Chip';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\n  export default function JobModal({job,  open, handleClose}) {\n    \n    if (!job.title) {\n        return <div />\n    }\n\n    return (\n      <div>\n        <Dialog\n          open={open}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">\n            {job.title} - \n            {job.company}\n            <img alt=\"company-logo\" className={'detail-logo'} src={job.company_logo} />\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText \n                id=\"alert-dialog-slide-description\"\n            >\n              <Chip size=\"small\" label={`from ${job.source}`} />\n            </DialogContentText>\n            <DialogContentText \n                id=\"alert-dialog-slide-description\"\n                dangerouslySetInnerHTML={{__html: job.description}}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Close\n            </Button>\n            <a href={job.url} target=\"_blank\">\n                <Button color=\"primary\">\n                Apply\n                </Button>\n            </a>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}